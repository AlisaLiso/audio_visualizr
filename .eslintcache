[{"/srv/app/src/App.js":"1","/srv/app/src/Cube.js":"2","/srv/app/src/reportWebVitals.js":"3","/srv/app/src/index.js":"4","/srv/app/src/Rectangle.js":"5","/srv/app/src/Analyser.js":"6"},{"size":2021,"mtime":1611325064735,"results":"7","hashOfConfig":"8"},{"size":478,"mtime":1611151561849,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611140762091,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611140761931,"results":"11","hashOfConfig":"8"},{"size":926,"mtime":1611319271491,"results":"12","hashOfConfig":"8"},{"size":1024,"mtime":1611332691068,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rt9bi0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/srv/app/src/App.js",["29"],"/srv/app/src/Cube.js",[],"/srv/app/src/reportWebVitals.js",[],["30","31"],"/srv/app/src/index.js",[],["32","33"],"/srv/app/src/Rectangle.js",["34","35"],"/srv/app/src/Analyser.js",["36","37","38","39"],"import React, { useEffect, useState, useRef } from 'react'\n\nexport default function Analyser({ audio }) {\n  const [audioContext, setAudioContext] = useState(new (window.AudioContext || window.webkitAudioContext)());\n  const [analyser, setAnalyser] = useState(audioContext.createAnalyser());\n  const [dataArray, setDataArray] = useState(new Uint8Array(analyser.frequencyBinCount));\n  const [source, setSource] = useState(audioContext.createMediaStreamSource(audio));\n  const [audioData, setAudioData] = useState(new Uint8Array(0));\n  const requestRef = useRef();\n\n  const tick = () => {\n    analyser.getByteTimeDomainData(dataArray);\n    setAudioData(dataArray);\n    requestRef.current = requestAnimationFrame(tick);\n  }\n\n  const changeValue = () => {\n    setDataArray(audioData);\n  }\n\n  useEffect(() => {\n    source.connect(analyser);\n    requestRef.current = requestAnimationFrame(tick);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [])\n\n  return <textarea onChange={changeValue} value={dataArray} />;\n}\n",{"ruleId":"40","severity":1,"message":"41","line":36,"column":6,"nodeType":"42","endLine":36,"endColumn":8,"suggestions":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":24,"nodeType":"52","messageId":"53","endLine":5,"endColumn":38},{"ruleId":"50","severity":1,"message":"54","line":6,"column":23,"nodeType":"52","messageId":"53","endLine":6,"endColumn":37},{"ruleId":"50","severity":1,"message":"55","line":4,"column":24,"nodeType":"52","messageId":"53","endLine":4,"endColumn":39},{"ruleId":"50","severity":1,"message":"56","line":5,"column":20,"nodeType":"52","messageId":"53","endLine":5,"endColumn":31},{"ruleId":"50","severity":1,"message":"57","line":7,"column":18,"nodeType":"52","messageId":"53","endLine":7,"endColumn":27},{"ruleId":"40","severity":1,"message":"58","line":25,"column":6,"nodeType":"42","endLine":25,"endColumn":8,"suggestions":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audio' and 'stopMic'. Either include them or remove the dependency array.","ArrayExpression",["60"],"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'setHighesPoint' is assigned a value but never used.","Identifier","unusedVar","'setLowestPoint' is assigned a value but never used.","'setAudioContext' is assigned a value but never used.","'setAnalyser' is assigned a value but never used.","'setSource' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'analyser', 'source', and 'tick'. Either include them or remove the dependency array.",["63"],{"desc":"64","fix":"65"},"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [audio, stopMic]",{"range":"68","text":"69"},"Update the dependencies array to be: [analyser, source, tick]",{"range":"70","text":"71"},[845,847],"[audio, stopMic]",[953,955],"[analyser, source, tick]"]